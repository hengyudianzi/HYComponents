//
//  TGSLoginAgreeView.swift
//  Smartbus_ChiFeng
//
//  Created by üê≤ on 2022/6/1.
//

import UIKit
import UIKit

/// ÂêåÊÑèÂçèËÆÆview
public class TGSLoginAgreeView: UIView,UITextViewDelegate{

    ///ÁÇπÂáªÁ±ªÂûã
    public enum ClickLinkType {
        ///Áî®Êà∑ÂçèËÆÆ
        case userProtocol
        ///ÈöêÁßÅÊù°Ê¨æ
        case privacyPolicy
    }
 
    ///ÁÇπÂáª‰∫ã‰ª∂
    public var clickHandle:((_ clickType:ClickLinkType)->())?
     
    ///ÂêåÊÑèView
    private lazy var agreeTextView : UITextView = {
        let textStr = "‰∏∫‰∫ÜÊõ¥Â•ΩÁöÑ‰øùÈöúÊÇ®ÁöÑ‰∏™‰∫∫ÊùÉÁõäÔºåËØ∑Âä°ÂøÖÂú®‰ΩøÁî®ÂâçÔºåËÆ§ÁúüÈòÖËØª„ÄäÁî®Êà∑ÂçèËÆÆ„ÄãÂíå„ÄäÈöêÁßÅÊù°Ê¨æ„ÄãÁöÑÂÖ®ÈÉ®ÂÜÖÂÆπ„ÄÇÂ¶ÇÊûúÊÇ®ÂêåÊÑèÔºåËØ∑ÁÇπÂáª‚ÄùÂêåÊÑèÂπ∂ÁªßÁª≠‚ÄúÂºÄÂßãÊé•ÂèóÊàë‰ª¨ÁöÑÊúçÂä°„ÄÇ"
        let textView = UITextView()
        textView.delegate = self
        textView.font =  UIFont.systemFont(ofSize: 25.0, weight: .regular)
        textView.textColor = UIColor.init(hexString: "#666666")
        textView.textAlignment = .center
 
        ///ËÆæ‰∏∫true Âú®‰ª£ÁêÜÈáåÈù¢Á¶ÅÊéâÊâÄÊúâÁöÑ‰∫§‰∫í‰∫ã‰ª∂
        textView.isEditable = false
         
//        textView.autoresizingMask =  UIView.AutoresizingMask.flexibleHeight
        textView.isScrollEnabled = false
        
        let paragraphStyle = NSMutableParagraphStyle()
        paragraphStyle.lineSpacing = 5
        paragraphStyle.alignment = .justified
        
        let attStr = NSMutableAttributedString(string: textStr)
        
        attStr.addAttributes([NSAttributedString.Key.paragraphStyle: paragraphStyle], range: NSMakeRange(0, textStr.count))
        
        //ÁÇπÂáªË∂ÖÈìæÊé•
        attStr.addAttribute(NSAttributedString.Key.link, value: "userProtocol://", range: (textStr as NSString).range(of: "„ÄäÁî®Êà∑ÂçèËÆÆ„Äã"))
        //ÁÇπÂáªË∂ÖÈìæÊé•
        attStr.addAttribute(NSAttributedString.Key.link, value: "privacyPolicy://", range: (textStr as NSString).range(of: "„ÄäÈöêÁßÅÊù°Ê¨æ„Äã"))
 
        attStr.addAttribute(NSAttributedString.Key.font, value: UIFont.systemFont(ofSize: 15.0, weight: .regular), range:(textStr as NSString).range(of: textStr))
        
        textView.attributedText = attStr
        ///Âè™ËÉΩËÆæÁΩÆ‰∏ÄÁßçÈ¢úËâ≤
        textView.linkTextAttributes =  [
            NSAttributedString.Key.foregroundColor: UIColor(hexString: navigation_BKColor)
        ]
         
        return textView
    }()
     
    public override init(frame: CGRect) {
        super.init(frame: frame)
        configUI()
    }
     
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}
 
extension TGSLoginAgreeView{
    
    public func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
        return false
    }
     
    public func textView(_ textView: UITextView, shouldInteractWith URL: URL, in characterRange: NSRange, interaction: UITextItemInteraction) -> Bool {
        if URL.scheme  ==  "userProtocol"{
            self.clickHandle?(.userProtocol)
            return false
        }else if URL.scheme == "privacyPolicy"{
            self.clickHandle?(.privacyPolicy)
            return false
        }
        return true
    }
}
 
extension TGSLoginAgreeView{
    private func configUI(){
        ///ÂêåÊÑèview
        self.addSubview(agreeTextView)
        agreeTextView.snp.makeConstraints { (make) in
            make.edges.equalToSuperview()
        }
    }
}
